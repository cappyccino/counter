name: Counter Static CI

on:
  push:
    branches: [ demo ]
  pull_request:
    branches: [ demo ]

env:
  node_version: 16.x
  severity_level: 12

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: yarn

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: yarn
      - name: Run tests
        run: yarn test --ci --watchAll=false

  integration-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: yarn
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          build: yarn build
          start: yarn start

  code-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: yarn
      - name: scan code
        id: run_yarn_audit
        shell: bash
        run: |
          yarn audit --level high || exit_code=$?
          echo "::set-output name=EXIT_CODE::$exit_code"

      - name: Check yarn audit with code ${{ steps.run_yarn_audit.outputs.EXIT_CODE }}
        if: ${{ steps.run_yarn_audit.outputs.EXIT_CODE > env.severity_level }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Critical vulnerabilities found :(')

  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    needs:
      - test
      - integration-test
      - code-scan
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}
          cache: 'npm'
      - run: yarn
      - name: Build App
        run: yarn build
      - name: Deploy to TAS
        uses: citizen-of-planet-earth/cf-cli-action@master
        with:
          cf_api: ${{ secrets.CF_API }}
          cf_username: ${{ secrets.CF_USER }}
          cf_password: ${{ secrets.CF_PASSWORD }}
          cf_org: ${{ secrets.CF_ORG }}
          cf_space: ${{ secrets.CF_SPACE }}
          command: push counter-staging -p build/ -b staticfile_buildpack
